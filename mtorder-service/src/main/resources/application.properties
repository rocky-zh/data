

# apollo配置中心，env指定查找参数的环境
apollo.env=DEV
apollo.server=139.159.247.139
apollo.bootstrap.enabled=true
apollo.bootstrap.namespaces=application

# 是否激活redis缓存管理，要启用redis除了设置成true 还需要删除pom里面redis包的<scope>provided</scope>
redis.enabled=false
# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=erp2.test.pagoda.com.cn
# Redis服务器连接端口
spring.redis.port=7936
# Redis服务器连接密码（默认为空）
spring.redis.password=
spring.redis.pool.min-idle=2
spring.redis.pool.max-idle=6
spring.redis.pool.max-active=50
spring.redis.pool.max-wait=5000


# 编码字段由规则自动生成，采用spel表达式可以在配置文件中指定，或者在模型中使用注解@GeneratedCode
# codeRule.模型名称.generatedFields=编码字段1，编码字段2
# codeRule.模型名称.编码字段1='SZ'+ #dateFormat('yyyy') + #subStr(#obj.value,3,'x') + #redisSeq('goods') + T(Math).random() + @springBean.callMethod()

# 模型字段验证，采用spel表达式可以在配置文件中指定，或者在模型中使用注解@ValidateClassExpression
# validator.模型名称.ruleNames=规则名1，规则名2
# validator.模型名称.规则名1=!#this.cars.isEmpty()
# validator.模型名称.规则名1-error=错误信息


# 定时任务  https://github.com/xuxueli/xxl-job
xxl.job.enabled=false
xxl.job.admin.addresses=http://erp2.test.pagoda.com.cn:7000/xxl-job-admin-1.9.1
### xxl-job executor address
xxl.job.executor.appname=xxl-job-executor-mtorder
xxl.job.executor.ip=localhost
xxl.job.executor.port=9999
### xxl-job, access token
xxl.job.accessToken=
### xxl-job log path
xxl.job.executor.logpath=/data/applogs/xxl-job/jobhandler
### xxl-job log retention days
xxl.job.executor.logretentiondays=-1


spring.jackson.default-property-inclusion=non_null

# 不自动生成表
spring.jpa.generate-ddl=false
spring.jpa.properties.hibernate.hbm2ddl.auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.type=trace
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=false

#batch
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# 表字段名跟java一致
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#properties for logging the sql statements with their parameters
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#logging.level.org.hibernate.persister.entity.SingleTableEntityPersister=DEBUG
logging.level.org.hibernate.persister.entity=DEBUG
logging.level.org.hibernate.persister.walking.spi=WARN
logging.level.org.hibernate.loader.plan=WARN

# custom interceptors
spring.jpa.properties.hibernate.ejb.interceptor=com.pagoda.platform.jms.hibernate.PagodaHibernateInterceptor
spring.jpa.properties.hibernate.persister.resolver=com.pagoda.platform.jms.hibernate.PagodaPersisterClassResolver

# HikariCP数据库连接池配置
spring.datasource.hikari.minimumIdle=5
spring.datasource.hikari.maximumPoolSize=50
spring.datasource.hikari.idleTimeout=30000
spring.datasource.hikari.poolName=SpringBootJPAHikariCP
spring.datasource.hikari.connectionTimeout=20000        

spring.datasource.max-active=200
spring.datasource.max-idle=6
spring.datasource.min-idle=2
spring.datasource.initial-size=2
spring.datasource.max-wait=60000
spring.datasource.time-between-eviction-runs-millis=60000
spring.datasource.min-evictable-idle-time-millis=300000

spring.datasource.validation-query=SELECT 1 FROM DUAL
spring.datasource.test-on-borrow=false
spring.datasource.test-on-return=false
spring.datasource.test-while-idle=true

#spring.datasource.poolPreparedStatements=false
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20

spring.datasource.filters=stat,wall
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000


# true by default
management.metrics.web.server.auto-time-requests=true
endpoints.prometheus.id=prometheus
# default is `http.server.requests`
management.metrics.web.server.requests-metric-name=http.server.requests
# default is http.client.requests
management.metrics.web.client.requests-metric-name=http.client.requests

management.security.enabled=false
management.health.redis.enabled=false
management.health.db.enabled=true

endpoints.metrics.sensitive=false
endpoints.metrics.enabled=true
endpoints.health.sensitive=false
endpoints.health.enabled=true

